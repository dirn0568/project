package board;

import java.sql.Array;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class boardDAO {
	private Connection conn;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	public boardDAO() { //데이터베이스와 연결상태 관리
		try {
			String dbURL = "jdbc:mysql://localhost:3306/myweb";
			String dbID = "root";
			String dbPassword = "root";
			Class.forName("com.mysql.cj.jdbc.Driver");
			conn = DriverManager.getConnection(dbURL, dbID, dbPassword);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	public String getDate() {
		String SQL = "SELECT NOW()";
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				return rs.getString(1);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return ""; //데이터베이스 오류
	}
	
	public int getNext() {
		String SQL = "select count(*) from board";
		try {
			PreparedStatement pstmt = conn.prepareStatement(SQL);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				return rs.getInt(1) + 1;
			}
			return 1; 
		} catch (Exception e) {
			e.printStackTrace();
		}
		return -1; //데이터베이스 오류
	}
	
	public int upload(String boardtitle, String userid, String boardcontent) {
		String SQL = "INSERT INTO board values(?, ?, ?, ?, ?, ?)";
		try {
			pstmt = conn.prepareStatement(SQL);
			pstmt.setInt(1, getNext());
			pstmt.setString(2, boardtitle);
			pstmt.setString(3, userid);
			pstmt.setString(4, getDate());
			pstmt.setString(5, boardcontent);
			pstmt.setInt(6, 0);
			return pstmt.executeUpdate();
		} catch(Exception e) {
			e.printStackTrace();
		}
		return -1; // 데이터베이스 오류
	}
	
	public int getpage() {
		int cnt = 0;
		int page_cnt = 0;
		try{
			String SQL = "SELECT COUNT(*) FROM board";
			pstmt = conn.prepareStatement(SQL);
			rs = pstmt.executeQuery();
			
			if (rs.next()) {
				cnt = rs.getInt(1);
			}
			page_cnt = cnt/10;
			return page_cnt;

		}catch(Exception e){
			e.printStackTrace();
		}
		return -1;
	}
	
	public ArrayList<String> board_list(int pageNumber) {
		ArrayList<ArrayList<String>> list = new ArrayList<ArrayList<String>>();
		ArrayList<String> temp_list = new ArrayList<String>();
		try {
			String SQL = "select * from board order by boarddate desc, boarddate limit ?,?";
			pstmt = conn.prepareStatement(SQL);
				
			pstmt.setInt(1, (pageNumber-1)*10);
			pstmt.setInt(2, 10);
				
			rs = pstmt.executeQuery();
			while (rs.next()) {
				temp_list.add(rs.getString(1));
				temp_list.add(rs.getString(2));
				temp_list.add(rs.getString(3));
				temp_list.add(rs.getString(4));
				temp_list.add(rs.getString(5));
				temp_list.add(rs.getString(6));
				list.addAll(ArrayList temp_list);
				temp_list.clear();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;
	}
	
	//	public ArrayList<board> getList(int pageNumber) {
	//		String SQL = "SELECT * FROM board WHERE bbsID < ? AND bbsAvailable = 1 ORDER BY bbsID DESC LIMIT 10";
	//		ArrayList<Bbs> list = new ArrayList<Bbs>();
	//		try {
	//			PreparedStatement pstmt = conn.prepareStatement(SQL);
	//			pstmt.setInt(1, getNext() - (pageNumber - 1) * 10);
	//			rs = pstmt.executeQuery();
	//			while (rs.next()) {
	//				Bbs bbs = new Bbs();
	//				bbs.setBbsID(rs.getInt(1));
	//				bbs.setBbsTitle(rs.getString(2));
	//				bbs.setUserID(rs.getString(3));
	//				bbs.setBbsDate(rs.getString(4));
	//				bbs.setBbsContent(rs.getString(5));
	//				bbs.setBbsAvailable(rs.getInt(6));
	//				list.add(bbs);
	//			}
	//		} catch (Exception e) {
	//			e.printStackTrace();
	//		}
	//		System.out.println(list);
	//		System.out.println("list에요");
	//		return list; //데이터베이스 오류
	//	}
	
	//	public List board_list(startRow) {
	//		List boardList = new ArrayList();
	//		String SQL = "select * from board order by boarddate desc, boarddate limit ?,?";
	//		pstmt = conn.prepareStatement(SQL);
	//		
	//		pstmt.setInt(1, (startRow-1) * 10 + 1);
	//		pstmt.setInt(2, 10);
	//		
	//		rs = pstmt.executeQuery();
	//		
	//		while(rs.next()) {
	//			
	//		}
	//	}
}
